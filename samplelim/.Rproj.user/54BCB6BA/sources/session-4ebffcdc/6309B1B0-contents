
bench<-data.frame(modele=character(),nUnknowns=integer(),algo=character(),jump_type=character(),jump=double(),sample_index=integer(),time=double(),name=character())
niter=20000
rowNumber<-1

#lim<-df_to_lim("urban/gueret_UNB_VIE+_2015_COMPOST.txt")
lim<-metabolic_net_2_matrix("modeles/e_coli_core.mat")
#lim<-df_to_lim("urban/gueret_UNB_VIE+_2015_COMPOST.txt")
ranges<-lim_autojump(lim,scale=1)
theorical_ranges<-lim_ranges(lim)
#jump_fixe<-c(0.003,0.007)
#jump_adaptatif<-c(0.0015,0.002,0.0025,0.035,0.004,0.0045,0.0055,0.006,0.0065,0.0075,0.008,0.0085,0.009,0.0095)
#jump_fixe<-c(0.00001,0.000001,0.0001,0.001,0.01,0.1,1,10,20,30,40,50,60,70,80,90,100,500,1000)
#jump_adaptatif<-c(0.00001,0.000001,0.0001,0.001,0.01,0.1,1)
#jump_biw<-c(NA,0.00001,0.000001,0.0001,0.001,0.01,0.1,1,10,100,1000,1e+04,2e+02,3e+02,4e+02,5e+02,6e+02,7e+02,8e+02,9e+02,1e+05,1e+06)
jump_adaptatif=c()
jump_fixe<-c(2,3,4,5,6,7,8,9,200,300,400)
jump_biw<-c(2e+02,3e+02,4e+02,5e+02,6e+02,7e+02,8e+02,9e+02,2e+03,3e+03,4e+03,5e+03,6e+03,7e+03,8e+03,9e+03,5e+04)


modele="ecoli"
nUnknowns=95
folder="echantillons/ecoli/"
for (i in 1:10){
  for (jmp in jump_biw){
    algo="sample_points"
    print(paste(i,"volesti",jmp))
    if (is.na(jmp)){
      name<-paste(folder,modele,"_",algo,"_",niter,"_jump_auto_",i,".csv",sep="")
      t<-system.time(raw_data<-volesti_rlim(lim, iter=niter))[[3]]
      bench[rowNumber,4]="auto"
      bench[rowNumber,5]=NA
    }else{
    name<-name<-paste(folder,modele,"_",algo,"_",niter,"_jump_fixe_",i,".csv",sep="")
  t<-system.time(raw_data<-volesti_rlim(lim, iter=niter,jmp=jmp))[[3]]
  bench[rowNumber,4]="fixe"
  bench[rowNumber,5]=jmp
  }
  write.csv(raw_data,name)
  bench[rowNumber,1]=modele
  bench[rowNumber,2]=nUnknowns
  bench[rowNumber,3]="sample_points"

  bench[rowNumber,6]=i
  bench[rowNumber,7]=t
  bench[rowNumber,8]=name

  rowNumber<-rowNumber+1
  }
  for (jump_type in c("fixe","adaptatif")){
    algo="rlim"
    if (jump_type=="fixe"){
      for (jmp in jump_fixe){
        print(paste(i,jump_type,jmp))
        name<-name<-paste(folder,modele,"_",algo,"_",niter,"_jump_",jump_type,"_",i,".csv",sep="")
        t<-system.time(raw_data<-rlim(lim, iter=niter,jmp=jmp))[[3]]
        write.csv(raw_data,name)
        bench[rowNumber,1]=modele
        bench[rowNumber,2]=nUnknowns
        bench[rowNumber,3]="rlim"
        bench[rowNumber,4]=jump_type
        bench[rowNumber,5]=jmp
        bench[rowNumber,6]=i
        bench[rowNumber,7]=t
        bench[rowNumber,8]=name
        rowNumber<-rowNumber+1

      }}
    if (jump_type=="adaptatif"){
      for (jmp in jump_adaptatif){

        print(paste(i,jump_type,jmp))
        name<-name<-paste(folder,modele,"_",algo,"_",niter,"_jump_",jump_type,"_",i,".csv",sep="")
        t<-system.time(raw_data<-rlim(lim, iter=niter,jmp=jmp*ranges))[[3]]
        write.csv(raw_data,name)
        bench[rowNumber,1]=modele
        bench[rowNumber,2]=nUnknowns
        bench[rowNumber,3]="rlim"
        bench[rowNumber,4]=jump_type
        bench[rowNumber,5]=jmp
        bench[rowNumber,6]=i
        bench[rowNumber,7]=t
        bench[rowNumber,8]=name
        rowNumber<-rowNumber+1

      }}




    }

  }
