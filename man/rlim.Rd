% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rlim.R
\name{rlim}
\alias{rlim}
\title{Uniformly sampling high-dimensional polytopes}
\usage{
rlim(
  lim,
  Hpol = NULL,
  type = "MiW",
  jmp = NULL,
  scale = 10,
  thin = 1,
  burn = 0,
  nsamp = 3000,
  nsim = NULL,
  starting_point = NULL,
  tol = sqrt(.Machine$double.eps),
  seed = NULL
)
}
\arguments{
\item{lim}{A list with four components \code{A}, \code{B}, \code{G} and \code{H} representing the full-dimensional polytope to be sampled; see the section \emph{Details} below.}

\item{type}{A character string specifying the MCMC algorithm to be used for sampling,}

\item{jmp}{A numeric value, the jump length parameter of the MCMC algorithm to be used. If \code{NULL}, a default value is computed from \env{lim}. See the section \emph{Details} below.}

\item{thin}{An integer giving the thinning parameter for the MCMC algorithm. Default is 1 (no thinning).}

\item{burn}{An integer giving the burning period for the MCMC algorithm. Default is 0 (no burn-in).}

\item{nsamp}{An integer value giving the number of sampled points in the polytope.}

\item{starting_point}{A numeric vector giving the coordinates of a point inside the polytope, used as starting point in the MCMC algorithm.}

\item{tol}{A numeric value specifying the tolerance for numeric computations.}
}
\value{
A \code{nsamp}*\code{p} matrix whose rows are the coordinates of the \code{nsamp} points sampled in the polytope.
The dimension \code{p} is:  
 * the dimension of the inner space the polytope relies into (i.e., the number of flows), if Hpol is NULL;
 * the dimension of Hpol is Hpol is an object of class Hpolytope.
}
\description{
The function \code{rlim()} provides access to implementations of two MCMC methods 
for uniformly sampling high-dimensional polytopes: the so-called mirror and 
Billard walks (MiW and BiW).
}
\details{
ADD.
}
\examples{
# Create a lim object from a Description file
DF <- system.file("extdata", "DeclarationFileBOWF-short.txt", package = "samplelim")
BOWF <- df2lim(DF)
# Manage sampling in this LIM with rlim()
rlim(lim = BOWF, nsamp = 20, seed = 123)
# Alternatively, you can use a Hpolytope object as input
# It allows using volesti input inside rlim
A = matrix(c(-1,0,0,-1,1,1), ncol=2, nrow=3, byrow=TRUE)
b = c(0,0,1)
P = Hpolytope(A = A, b = b)
rlim(lim=NULL, Hpol = P, nsamp = 20, seed = 123)
# Samples can be thinned and burnt-in 
rlim(lim= BOWF, nsamp = 20, burn = 50, thin =10, seed = 123)
}
